# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2020-10-21 03:49+0300\n"
"PO-Revision-Date: 2020-10-21 03:50+0300\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.4.1\n"

#: data/download.py:15
msgid "Документация"
msgstr "Documentation"

#: data/download.py:16
msgid ""
"Руководства пользователя, паспорт продукта и другая техническая документация."
msgstr "User manual, product passport, etc."

#: data/download.py:18
msgid "Брошюры"
msgstr "Datasheets"

#: data/download.py:19
msgid "Информация о продукте."
msgstr "Product documentation."

#: data/download.py:20
msgid "Драйвера"
msgstr "Drivers"

#: data/download.py:21
msgid "Драйвера для ОС Windows (для ОС Linux драйвер не нужен)."
msgstr "Drivers for Windows (Linux does not need a driver)."

#: data/download.py:22
msgid "Прошивка"
msgstr "Firmware"

#: data/download.py:23
msgid ""
"Обновление прошивки осуществляется с помощью кроссплатформенного ПО EPCBoot "
"(ссылка на скачивание на этой странице)."
msgstr ""
"Firmware updates are performed using EPCBoot cross-platform SOFTWARE "
"(download link on this page)."

#: data/download.py:25
msgid "Программное обеспечение"
msgstr "Software for PC"

#: data/download.py:26
msgid ""
"Пользовательское программное обеспечение для поиска неисправностей на "
"печатных платах с использованием аналоговых сигнатурных анализаторов "
"EyePoint. Для работы ПО требуется Python 3.6.8 (win32) с набором необходимых "
"библиотек, драйвер, а также Распространяемые пакеты Microsoft Visual C++ для "
"Visual Studio 2013 (win32). Всё это можно скачать на данной странице."
msgstr ""
"PC software for Troubleshooting printed circuit boards using EyePoint analog "
"signature analyzers.The SOFTWARE requires Python 3.6.8 (win32) with a set of "
"necessary libraries, as well as Microsoft Visual C++ Redistributable "
"packages for Visual Studio 2013 (win32). You can download them on this page."

#: data/download.py:32
msgid "IVM debugger"
msgstr "IVM debugger"

#: data/download.py:33
msgid ""
"Кроссплатформенное ПО с графическим интерфейсом для отладки сигнатурных "
"анализаторов EyePoint IVM. Данное ПО позволяет вручную вызывать команды "
"управления. Формирование и разбор полей сложных команд осуществляется "
"автоматически. ПО распространяется в виде бинарных файлов, и в виде исходных "
"кодов. Для работы на Windows требуется драйвер."
msgstr ""
"Cross-platform software with a graphical interface for debugging EyePoint "
"IVM signature analyzers. This SOFTWARE allows you to manually call "
"management commands. Formation and analysis of fields of complex commands is "
"done automatically. The SOFTWARE is distributed as binary files and as "
"source code. To run on Windows requires a driver."

#: data/download.py:39
msgid "EPCBoot"
msgstr "EPCBoot"

#: data/download.py:40
msgid ""
"Кроссплатформенное ПО для обновления прошивок сигнатурных анализаторов "
"EyePoint и его исходные коды. Репозиторий EPCBoot на GitHub: <a "
"href='https://github.com/EPC-MSU/EPCboot'>https://github.com/EPC-MSU/"
"EPCboot</a>"
msgstr ""
"Cross-platform SOFTWARE for updating eyepoint signature analyzer firmware "
"and its source codes. ETC Boot repository on GitHub: <a href='https://github."
"com/EPC-MSU/EPCboot'>https://github.com/EPC-MSU/EPCboot</a>"

#: data/download.py:44
msgid "Прошивка встроенного компьютера"
msgstr "Firmware of the embedded computer"

#: data/download.py:45
msgid ""
"Образы встроенной операционной системы для устройств серии EyePoint S. "
"Обновление образа осуществляется посредством записи на SD карту. Более "
"подробная информация содержится в руководстве пользователя. Для записи "
"образа на SD карту в ОС Windows можно использовать Win32 Disk Imager (можно "
"скачать с официального сайта или с данной страницы)."
msgstr ""
"Embedded operating system images for EyePoint S series devices. The image is "
"updated by writing to the SD card. For more information, see the user's "
"guide. To write an image to an SD card in Windows, you can use the Win32 "
"Disk Imager (you can download it from the official website or from this "
"page)."

#: data/download.py:51
msgid "Описание библиотеки для программного управления"
msgstr "Description of the software management library"

#: data/download.py:53
msgid ""
"Документация к библиотеке libivm, которая может быть использована для "
"взаимодействия с измерителями ВАХ EyePoint IVM. Саму библиотеку можно "
"скачать на этой странице."
msgstr ""
"Documentation for the libivm library, that can be used to interact with "
"EyePoint IVM VAC meters. The library itself can be downloaded on this page."

#: data/download.py:56
msgid "Стороннее вспомогательное ПО"
msgstr "Third-party support software"

#: data/download.py:58
msgid ""
"Дополнительное стороннее программное обеспечение, которое может "
"потребоваться при работе с устройствами EyePoint."
msgstr ""
"Additional third-party software that may be required when working with "
"EyePoint devices."

#: data/download.py:60
msgid "Библиотека для программного управления"
msgstr "Library for software management"

#: data/download.py:62
msgid ""
"Кроссплатформенная библиотека для работы с измерителями ВАХ EyePoint IVM "
"(измеритель сигнатур, который используется в различных устройствах линейки "
"EyePoint). Библиотека написана на языке C, распространяется в виде бинарных "
"файлов (win32, win64, debian) и в виде исходных кодов. Документацию к "
"библиотеке можно скачать отдельно на этой странице."
msgstr ""
"Cross-platform library for working with EyePoint I–V curve-meters (a "
"signature meter used in various devices, in the EyePoint product line). The "
"library is written in C, distributed as binary files (win32, win64, debian) "
"and as source code. Library documentation can be downloaded separately on "
"this page."

#: data/download.py:68
msgid "Примеры использования API и биндинги для Python и C#"
msgstr "Examples of using the API and bindings for Python and C#"

#: data/download.py:71
msgid ""
"Комплект примеров программного кода на языках C, C# и Python, реализующего "
"простые измерения сигнатур с использованием EyePoint IVM (измеритель "
"сигнатур, который используется в различных устройствах линейки EyePoint). "
"Также в данном архиве можно найти биндинги для языков Python и C#."
msgstr ""
"A set of code examples in C, C#, and Python that implement simple signature "
"measurements using EyePoint IVM (a signature meter used in various devices, "
"in the EyePoint product line). You can also find bindings for Python and C# "
"in this archive."

#: data/download.py:79
msgid "Полный комплект программного обеспечения"
msgstr "Full software package"

#: data/download.py:81
msgid "Архив со всем софтом и документацией для этого продукта"
msgstr "Archive with all software and documentation for this product"

#: data/download.py:92
msgid "Версия"
msgstr "Version"

#: data/download.py:93
msgid "Дата выпуска"
msgstr "Release date"

#: data/download.py:94
msgid "Размер"
msgstr "Size"

#: data/download.py:95
msgid "Ссылка"
msgstr "Link"

#: data/download.py:96
msgid "Скачать"
msgstr "Download"

#: data/other.py:4
msgid ""
"<b>EyePoint</b> – системы для локализации неисправных электронных "
"компонентов на печатных платах, а также для выявления контрафактных, "
"перемаркерованных или поврежденных компонентов в BGA корпусах на основе "
"метода аналогового сигнатурного анализа (АСА). В линейке <b>EyePoint</b> "
"есть автоматические <b>(P10, B10, P10b)</b> и ручные <b>(S1, u2х)</b> "
"системы, а также ОЕМ модуль <b>а2</b>, который может быть встроен в уже "
"используемые системы пользователя. Для работы с модулем поставляется API, "
"которое позволяет без лишних проблем управлять каналом сигнатурного анализа."
msgstr ""
"<b>EyePoint</b> - systems for localizing faulty electronic components on "
"PCB, as well as for identifying counterfeit, remarked or damaged components "
"in BGA packages based on the analog signature analysis (ASA) method. The "
"<b>EyePoint</b> products line includes automatic <b>(P10, B10, P10b)</b> "
"systems, manual <b>(S1, u2</b>x) systems and OEM module <b> a2</b> with open "
"API, which can be built into existing user systems."

#: data/other.py:11
msgid "Технические данные"
msgstr "Specifications"

#: data/other.py:13
msgid "Россия, Москва, 119333<br>ул. Фотиевой, дом 5, строение 1"
msgstr "Russia, Moscow, 119333<br>Fotievoy street 5, bldg. 1"

#: data/other.py:15
msgid "Подробнее"
msgstr "More"

#: data/other.py:17
msgid "ООО «ЦИФ МГУ имени М.В. Ломоносова»"
msgstr "Engineering Physics Center MSU"

#: data/other.py:19
msgid ""
"EyePoint - линейка простого и функционального оборудования для локализации "
"неисправных компонентов на платах, использующего метод аналогового "
"сигнатурного анализа и частотный диапазон до 100 кГц."
msgstr ""
"EyePoint - a simple and powerful equipment for localizing faulty components "
"on PCB using the analog signature analysis method and a frequency range of "
"up to 100 kHz."

#: data/other.py:22
msgid "EyePoint, диагностика электронных схем, анализ неисправностей, ЦИФ МГУ"
msgstr "EyePoint, localizing faulty components, EPC MSU"

#: data/other.py:24
msgid "EyePoint. Локализаторы неисправных компонентов"
msgstr "EyePoint. Localizers of faulty components"

#: data/products.py:19
msgid "EyePoint P10"
msgstr "EyePoint P10"

#: data/products.py:20
msgid ""
"Автоматическая настольная система для поиска неисправных электронных "
"компонентов на печатных платах методом АСА."
msgstr ""
"Fully automatic desktop system for detection of defective electronic "
"components on PCB by ASA method."

#: data/products.py:22 data/products.py:50
msgid ""
"Система сочетает в себе автоматическую оптическую систему распознавания "
"выводов компонентов и летающий щуп для проведения электрического "
"тестирования методом аналогового сигнатурного анализа."
msgstr ""
"The system combines an automatic optical system for recognizing component "
"leads and a flying probe for conducting electrical testing by the ASA method."

#: data/products.py:25
msgid "Прост в использовании"
msgstr "Easy to use"

#: data/products.py:26
msgid "Снизит нагрузку на инженера"
msgstr "Simplify the engineer's life"

#: data/products.py:27
msgid "Не повредит плату"
msgstr "Don't damage the PCB"

#: data/products.py:28 data/products.py:56 data/products.py:112
#: data/products.py:141
msgid "Метод тестирования: АСА"
msgstr "Testing method: ASA"

#: data/products.py:29 data/products.py:57 data/products.py:88
#: data/products.py:113 data/products.py:142
msgid "Диапазон частот тестирующего сигнала: 1 Гц – 100 кГц"
msgstr "Test signal frequency range: 1 Hz - 100 kHz"

#: data/products.py:30 data/products.py:58 data/products.py:89
msgid "Рабочие напряжения: 1,2, 3,3, 5, 12 В"
msgstr "Operating voltage: 1.2, 3.3, 5, 12 V"

#: data/products.py:31 data/products.py:59
msgid "Максимальный размер платы: 280x275 мм"
msgstr "Maximum board size: 280x275 mm"

#: data/products.py:32
msgid "Поддержка корпусов: LQFP, SOIC, SMD, SOT, DIP и т.д"
msgstr "Enclosure support: LQFP, SOIC, SMD, SOT, DIP, etc"

#: data/products.py:33 data/products.py:62
msgid "Построение карты тестирования до 10 см²/мин"
msgstr "Scan speed: up to 10 cm²/ min"

#: data/products.py:34 data/products.py:65
msgid "Скорость тестирования: 100 точек в мин"
msgstr "Testing speed: 100 points per minute"

#: data/products.py:35 data/products.py:66
msgid "Точность установки щупа: 30 мкм"
msgstr "Probe positioning accuracy: 30 microns"

#: data/products.py:36 data/products.py:67
msgid "Время на смену платы: 30 сек"
msgstr "Time to PCB change: 30 sec"

#: data/products.py:37 data/products.py:68
msgid "Тестирующее напряжение до +/- 12 В"
msgstr "Test voltage: up to +/- 12 V"

#: data/products.py:38 data/products.py:69
msgid "Чувствительность по R 2 Ом - 450 кОм"
msgstr "R sensitivity: 2 Ohm - 450 kOhm"

#: data/products.py:39 data/products.py:70
msgid "Чувствительность по C 300 пФ - 100 мкФ"
msgstr "C sensitivity: 300 pF - 100 uF"

#: data/products.py:40 data/products.py:71
msgid "Чувствительность по L от 270 мкГн"
msgstr "L sensitivity: from 270 μH"

#: data/products.py:41 data/products.py:73
msgid "Габариты и вес: 604х543х473 мм, 50 кг"
msgstr "Dimensions and weight: 604х543х473 mm, 50 kg"

#: data/products.py:42 data/products.py:74
msgid "Управляющий ПК: Intel i5 2.8 ГГц, 16 Гб RAM, 256 Гб SSD"
msgstr "PC: Intel i5 2.8 GHz, 16 GB RAM, 256 GB SSD"

#: data/products.py:43 data/products.py:75
msgid "Электропитание: ~220В, 300 Вт"
msgstr "Power supply: ~ 220V, 300W"

#: data/products.py:46
msgid "EyePoint P10b"
msgstr "EyePoint P10b"

#: data/products.py:47
msgid ""
"EyePoint P10b - автоматическая настольная система для поиска неисправных "
"электронных компонентов на печатных платах с опцией выявления контрафактных, "
"перемаркерованных или поврежденных компонентов в BGA корпусах."
msgstr ""
"EyePoint P10b - fully automatic desktop system for detection of defective "
"electronic components on PCB, counterfeit, re-marked or damaged electronic "
"components in BGA packages."

#: data/products.py:53
msgid "PCB и BGA"
msgstr "PCB and BGA"

#: data/products.py:54
msgid "Экономия времени на поиске до 3 раз"
msgstr "Save search time up to 3 times"

#: data/products.py:55
msgid "Автоматическая проверка до 2500 выводов"
msgstr "Max of test pins: up to 2500 pins"

#: data/products.py:60
msgid "Поддержка корпусов: LQFP, SOIC, SMD, SOT, DIP и т.д."
msgstr "Enclosure support: LQFP, SOIC, SMD, SOT, DIP, etc."

#: data/products.py:61
msgid "Поддержка тестирования корпусов типа BGA"
msgstr "BGA chips testing: available"

#: data/products.py:63
msgid "Шаг и количество выводов BGA микросхем: 1,5 - 0,4 мм, 8 - 2500 шт."
msgstr "Pitch and number of pins of BGA chips: 1.5 - 0.4 mm, 8 - 2500 pcs."

#: data/products.py:64
msgid "Расположение выводов: произвольное"
msgstr "Pins arrangement: random"

#: data/products.py:72
msgid "Предоставляются подложки для крепления BGA микросхем"
msgstr "Substrates for BGA chips are provided"

#: data/products.py:78
msgid "EyePoint S2"
msgstr "EyePoint S2"

#: data/products.py:79
msgid ""
"Локализатор неисправных электронных компонентов с сенсорным экраном - "
"устройство для ручного поиска неисправностей методом аналогового "
"сигнатурного анализа."
msgstr ""
"Manual localizer of faulty electronic components using analog signature "
"analysis with convenient touch screen."

#: data/products.py:81
msgid ""
"EyePoint S2 – второе поколение настольной системы для локализации "
"неисправных электронных компонентов на печатных платах. Система обладает "
"большим удобным сенсорным экраном. Дополнительная педаль позволяет упростить "
"управление системой."
msgstr ""
"EyePoint S2 - the second generation of a desktop system for manual "
"localizing faulty electronic components on PCB. The system has a large "
"convenient touch screen. An additional pedal will simplify the management of "
"the system."

#: data/products.py:85
msgid "Простой и легкий прибор"
msgstr "Simple and lightweight device"

#: data/products.py:86 data/products.py:109
msgid "Частота зондирования до 100 кГц"
msgstr "Test signal frequency range: 1 Hz - 100 kHz"

#: data/products.py:87
msgid "Доступен план тестирования "
msgstr "\"Test Plan\" mode: available "

#: data/products.py:90 data/products.py:123
msgid ""
"В зависимости от диапазона измеряемых значений максимальное напряжение до 12 "
"В, максимальный ток до 250 мкА"
msgstr ""
"Depending on the range of measured values, the max voltage is up to 12 V, "
"the max current is up to 250 μA"

#: data/products.py:92
msgid "Габаритные размеры: 205 х 204 х 120 мм"
msgstr "Dimensions: 205 x 204 x 120 mm"

#: data/products.py:93
msgid "7-ми дюймовый цветной дисплей с функцией touchscreen"
msgstr "7 inch color display with touchscreen"

#: data/products.py:94 data/products.py:118
msgid "Регулируемый порог совпадения сигнатур"
msgstr "Adjustable signature matched threshold"

#: data/products.py:95
msgid "Внешняя педаль для дополнительного функционала"
msgstr "External pedal for additional functionality"

#: data/products.py:96
msgid "Экспорт данных в формате данных PNG на внешний Flash накопитель"
msgstr "Export data in PNG data format to an external Flash drive"

#: data/products.py:97 data/products.py:119
msgid "Поддержка режима «План тестирования»"
msgstr "\"Test Plan\" mode available"

#: data/products.py:98
msgid "Возможность подключения к ПК по USB (Win, Linux)"
msgstr "Can be connected to PC (Win, Linux) via USB"

#: data/products.py:99
msgid "Возможность программного управления (C/C++, C#, Python)"
msgstr "Possibility of program management: available (C/C+, C#, Python)"

#: data/products.py:102
msgid "EyePoint u2"
msgstr "EyePoint u2"

#: data/products.py:103
msgid ""
"EyePoint u2 – миниатюрная система для поиска неисправных электронных "
"компонентов на печатных платах методом аналогового сигнатурного анализа "
"(ASA)."
msgstr ""
"EyePoint u2 is a miniature system for localizing faulty electronic "
"components on PCB using ASA method."

#: data/products.py:105
msgid ""
"EyePoint u2 – миниатюрная система для поиска неисправных электронных "
"компонентов на печатных платах методом аналогового сигнатурного анализа "
"(АСА). Для работы необходимо подключить EyePoint u2 к компьютеру по USB. "
"Версии: u21 – одноканальная система, u22 – двухканальная система."
msgstr ""
"EyePoint u2 is a miniature system for localizing faulty electronic "
"components on PCB using ASA method. For work you need connect EyePoint u2 to "
"the PC via USB. Versions: u21 – single-channel system, u22 – dual-channel "
"system."

#: data/products.py:110
msgid "Миниатюрные размеры"
msgstr "Miniature size"

#: data/products.py:111
msgid "Доступен функционал старшей модели S2"
msgstr "All functionality of S2"

#: data/products.py:114 data/products.py:143
msgid "Рабочие напряжения: 1.2, 3.3, 5, 12 В"
msgstr "Operating voltages: 1.2, 3.3, 5, 12 V"

#: data/products.py:115 data/products.py:144
msgid "Чувствительность по току: 250 мкА, 2.5 мА, 25 мА"
msgstr "Current sensitivity: 250 μA, 2.5 mA, 25 mA"

#: data/products.py:116 data/products.py:148
msgid "Напряжение питания: 5 В"
msgstr "Supply voltage: 5 V"

#: data/products.py:117
msgid "Габаритные размеры: 175 х 90 х 40 мм"
msgstr "Dimensions: 175 х 90 х 40 mm"

#: data/products.py:120
msgid "Интерфейс связи USB 2.0"
msgstr "USB 2.0 communication"

#: data/products.py:121
msgid "Поддержка ОС: Windows 7/8/10 (х64/х86), Linux"
msgstr "OS support: Windows 7/8/10 (x64/x86), Linux"

#: data/products.py:122
msgid "Возможность программного управления: C#/C++, Qt, Python"
msgstr "Possibility of program management: available (C#/C++, Qt, Python)"

#: data/products.py:127
msgid "EyePoint a2"
msgstr "EyePoint a2"

#: data/products.py:128
msgid ""
"Одноканальный OEM модуль (без корпуса) аналогового сигнатурного анализа."
msgstr "Single-channel OEM analog signature analysis module (without housing)."

#: data/products.py:129
msgid ""
"EyePoint a2 - ОЕМ модуль, предназначенный для поиска неисправных электронных "
"компонентов на печатных платах методом аналогового сигнатурного анализа "
"(АСА). Устройство управляется по USB (через виртуальный COM-порт). Модуль "
"имеет открытый API для разработки собственного программного обеспечения. В "
"комплекте с устройством поставляется SDK (комплект разработчика), который "
"включает в себя: библиотеку для языка программирования C, биндинги для "
"языков Python и С#, примеры кода и документацию. Поддерживаются ОС Windows и "
"Linux. Кроме того, модуль может использоваться совместно с готовым ПО для "
"других устройств семейства EyePoint."
msgstr ""
"EyePoint a2 - OEM module designed to find defective electronic components on "
"PCB using the Analog Signature Analysis (\"ASA\") method. The device is "
"controlled via USB (via a virtual COM port). The module has an open API for "
"developing your own software. The device comes with an SDK (developer kit) "
"that includes: a library for the C programming language, bindings for Python "
"and C#, code examples, and documentation. Windows and Linux are supported. "
"In addition, the module can be used in conjunction with ready-made SOFTWARE "
"for other devices in the EyePoint family."

#: data/products.py:138
msgid "Открытый API"
msgstr "Open API"

#: data/products.py:139
msgid "Полный функционал"
msgstr "Full functionality"

#: data/products.py:140
msgid "Максимально доступный"
msgstr "Maximum available"

#: data/products.py:145
msgid "Интерфейс подключения к ПК: USB 2.0"
msgstr "USB 2.0 communication"

#: data/products.py:146
msgid "Возможность программного управления: С#/С++; Python"
msgstr "Possibility of program management: available (C#/C++, Python)"

#: data/products.py:147
msgid "Габаритные размеры: 60х40х5 мм"
msgstr "Dimensions: 60 х 40 х 5 mm"

#: data/products.py:149
msgid "Питание от USB разъема"
msgstr "USB powered"

#~ msgid "Для остальных операционных систем драйвер не нужен."
#~ msgstr "No driver is needed for other operating systems."

#~ msgid "Софт"
#~ msgstr "Software"

#~ msgid "Документация по протоколу программного управления (API)"
#~ msgstr "Documentation for the software management Protocol (API)"

#~ msgid "Набор для разработчика (SDK)"
#~ msgstr "Developer kit (SDK)"

#~ msgid ""
#~ "Включает в себя примеры управления устройством в исходных кодах для "
#~ "языков Си, С#, Python 3, а также биндинги для двух последних."
#~ msgstr ""
#~ "Includes examples of device management in source code for C, C#, and "
#~ "Python 3, as well as bindings for the latter two."

#~ msgid ""
#~ "Ручная версия локализатора неисправных электронных компонентов с "
#~ "сенсорным экраном."
#~ msgstr ""
#~ "Manual localizer of faulty electronic components with a touch screen."

#~ msgid ""
#~ "EyePoint u2 – миниатюрная система для поиска неисправных электронных "
#~ "компонентов на печатных платах методом аналогового сигнатурного анализа "
#~ "АСА. Для работы необходимо подключить EyePoint u2 к компьютеру по USB и "
#~ "начать тестирование в ручном режиме. Версии: u21 – одноканальная система, "
#~ "u22 – двухканальная система. Для использования системы EyePoint  Вам "
#~ "необходима последняя версия драйвера. Предыдущие версии выложены для "
#~ "пользователей, которые не хотят переходить на новые версии. "
#~ msgstr ""
#~ "EyePoint u2 is a miniature system for localizing faulty electronic "
#~ "components on PCB using ASA method. You connect EyePoint u2 to the PC via "
#~ "USB and start testing in manual mode. Versions: u21 - single-channel "
#~ "system, u22 - dual-channel system. You need the latest driver to use the "
#~ "EyePoint system. Previous versions are posted for users who do not want "
#~ "to switch to new versions. "

#~ msgid "Файлы прошивок для загрузки в устройство"
#~ msgstr "Firmware files for device"
